#!/bin/sh

usage() {
cat << EOF
Usage: $(basename "$0") [option]... <summary> [body]

Generate a notification using gdbus.

Options:
  -h         Show this help.
  -t TIME    Time in ms to keep the notification.
  -i ICON    Icon filename or stock icon to display.
  -r NAME    If a notification with the same name exists,
             replace it.

Depends on: gdbus
EOF
}

# Dependency check
if ! command -v gdbus > /dev/null; then
    echo 'gdbus not found.'
    exit 1
fi

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

name= # id used for replacing notification
delay=-1 # -1 delay is default delay
icon=
while getopts "r:t:i:h" opt; do
    case "$opt" in
        r)  name="$OPTARG"    ;;
        t)  delay="$OPTARG" ;;
        i)  icon="$OPTARG"  ;;
        h)
            usage
            exit 1
            ;;
        *)
            ;;
    esac
done

shift $((OPTIND - 1))

if [ $# -lt 1 ]; then
    echo 'Not enough arguments.'
    exit 1
fi

summary="$1"; shift
body="$*"

### Generate notification
id=0 # if id=0, a new id is returned
id_file="/tmp/notif_${USER}_${name}"

if [ -f "$id_file" ]; then
    id="$(cat "$id_file")"
fi

newid=$(gdbus call --session                              \
    --dest org.freedesktop.Notifications                  \
    --object-path /org/freedesktop/Notifications          \
    --method org.freedesktop.Notifications.Notify         \
    -- '' "$id" "$icon" "$summary" "$body" [] {} "$delay" \
    | sed 's/(uint32 \([0-9]*\),)/\1/g') # extract new id

# Store new id if necessary
if [ -n "$name" ]; then
    echo "$id" > "$id_file"
fi
